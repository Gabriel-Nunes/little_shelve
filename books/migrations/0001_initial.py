# Generated by Django 4.0.4 on 2022-06-11 14:28

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn_num', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('UDF', 'undefined'), ('CLA', 'Classic'), ('SCI', 'Science'), ('FAT', 'Fairy Tales'), ('SFI', 'Science Fiction'), ('HIS', 'History')], default='UDF', max_length=3)),
                ('language', models.CharField(blank=True, choices=[('PT', 'Portuguese'), ('EN', 'English')], default='PT', max_length=2, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('front_cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('back_cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('num_pages', models.IntegerField(blank=True, null=True)),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('edition', models.IntegerField(blank=True, null=True)),
                ('reading_now', models.BooleanField(blank=True, null=True)),
                ('wish_list', models.BooleanField(blank=True, null=True)),
                ('my_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('is_favorite', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Not reading', 'Not reading'), ('Reading', 'Reading'), ('Finished', 'Finished')], default='Not reading', max_length=11)),
                ('lended_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lended_from', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='books', to=settings.AUTH_USER_MODEL)),
                ('related', models.ManyToManyField(blank=True, to='books.book')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='books.person')),
            ],
            bases=('books.person',),
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=80)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='books.school')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('favorite', models.BooleanField(default=False)),
                ('hobbies', models.CharField(blank=True, max_length=100, null=True)),
                ('job', models.CharField(blank=True, max_length=50, null=True)),
                ('books', models.ManyToManyField(blank=True, related_name='characters', to='books.book')),
                ('friends', models.ManyToManyField(blank=True, related_name='friends+', to='books.character')),
                ('images', models.ManyToManyField(blank=True, related_name='images+', to='books.media')),
                ('main_picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='main_picture+', to='books.media')),
            ],
        ),
        migrations.CreateModel(
            name='BookRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lend_date', models.DateField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('accept', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='requests', to='books.book')),
                ('book_owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='incoming_requests', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='books.message')),
                ('request_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='outcoming_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='author',
            field=models.ManyToManyField(blank=True, to='books.author'),
        ),
    ]
